#ifndef _H_biblioteca
#define _H_biblioteca

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
   
#define tam 10
   
typedef struct Celula *TipoApontador;
typedef struct Lista *TipoApontaLista;
   
typedef struct {
    char tabuleiro[tam];
    int jogada;
} TipoItem;
   
typedef struct Celula {
    TipoItem Item;
    TipoApontador Prox;
} Celula;
   
typedef struct Lista{
    TipoApontador Primeiro, Ultimo;
    int tamanho;
    TipoApontaLista Next;
} TipoLista;
   
typedef struct {
    TipoApontaLista First, Last;
} TipoMLista;

/*-----------------------------------------------------------------------------------------------*/
//Retorna TRUE se a lista estÃ¡ vazia
/*-----------------------------------------------------------------------------------------------*/
int Vazia(TipoLista Lista);
/*-----------------------------------------------------------------------------------------------*/
 
/*-----------------------------------------------------------------------------------------------*/
//Faz uma Lista Ficar Vazia
/*-----------------------------------------------------------------------------------------------*/
void FLVazia(TipoLista *Lista);
/*-----------------------------------------------------------------------------------------------*/
   
/*-----------------------------------------------------------------------------------------------*/
//Faz uma MLista Ficar Vazia
/*-----------------------------------------------------------------------------------------------*/
void FMLVazia(TipoMLista *MLista);
/*-----------------------------------------------------------------------------------------------*/
   
/*-----------------------------------------------------------------------------------------------*/
//Insere um item x em uma lista
/*-----------------------------------------------------------------------------------------------*/
void Insere(TipoItem x, TipoLista *Lista);
/*-----------------------------------------------------------------------------------------------*/
   
/*-----------------------------------------------------------------------------------------------*/
//cria nova lista em uma MLista
/*-----------------------------------------------------------------------------------------------*/
void Cria_lista (TipoMLista *MLista);
/*-----------------------------------------------------------------------------------------------*/
  
/*-----------------------------------------------------------------------------------------------*/
//Função para ler um arquivo e salvar na lista
/*-----------------------------------------------------------------------------------------------*/
void le_arquivo(TipoMLista *MLista);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//Desaloca uma MLista
/*-----------------------------------------------------------------------------------------------*/
void desaloca (TipoMLista MLista);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
// devolve um int pseudo-aleatório entre min e max, inclusives    
/*-----------------------------------------------------------------------------------------------*/
int sorteia(int min, int max);
/*-----------------------------------------------------------------------------------------------*/
   
/*-----------------------------------------------------------------------------------------------*/
//Maquina joga O (aleatoriamente)
/*-----------------------------------------------------------------------------------------------*/
int maquinaO (char *str);
/*-----------------------------------------------------------------------------------------------*/
   
/*-----------------------------------------------------------------------------------------------*/
//Maquina joga X (aleatoriamente)
/*-----------------------------------------------------------------------------------------------*/
int maquinaX_aleatorio (char *str);
/*-----------------------------------------------------------------------------------------------*/
   
/*-----------------------------------------------------------------------------------------------*/
//Verifica se alguem venceu e retorna o simbolo do jogador vencedor (X ou O)
/*-----------------------------------------------------------------------------------------------*/
char ganhou (char *str);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//Inicializa o vetor tabuleiro com '_________'
/*-----------------------------------------------------------------------------------------------*/
void zera_tab (char *str);
/*-----------------------------------------------------------------------------------------------*/
  
/*-----------------------------------------------------------------------------------------------*/
//maquina joga com 'O' não aleatoreamente
/*-----------------------------------------------------------------------------------------------*/
void maqO(TipoLista *Lista, TipoMLista MLista);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//maquina joga com 'X' não aleatoreamente
/*-----------------------------------------------------------------------------------------------*/
void maqX(TipoLista *Lista, TipoMLista MLista);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//Verifica se um item existe dentro de uma lista
/*-----------------------------------------------------------------------------------------------*/
int existe (TipoItem Item, TipoLista Lista);
/*-----------------------------------------------------------------------------------------------*/

#endif
